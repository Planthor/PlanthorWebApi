name: Code Analysis

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:

  coverage:
    name: Run Coverage 
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Cache .NET packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-

      - name: Restore dependencies
        run: dotnet restore

      - name: Run coverage code 
        run: |
          dotnet tool install --global dotnet-coverage
          dotnet build --no-incremental
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ./coverage.xml

  sonar-scan:
    name: Run SonarScanner
    runs-on: ubuntu-22.04
    needs: [ coverage ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache .NET packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-

      - name: Cache SonarScanner
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('./.github/workflows/qac.yml') }}

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: ./coverage-report

      - name: Restore dependencies
        run: |
          dotnet tool install --global dotnet-sonarscanner

          dotnet sonarscanner begin \
          /k:"Planthor_PlanthorIdentityServer" \
          /o:"planthor" \
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.exclusions="src/*/wwwroot/lib"  
          
          dotnet restore
          dotnet build --no-incremental

          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
